---------------------------------------------------------
-- Free graded monad generated by algebraic operations --
---------------------------------------------------------

module Semantics.Model.Examples.TSets.Monad.Effects.Naturality where

open import Function

open import Data.Empty
open import Data.Product
open import Data.Unit hiding (_≤_)

open import Semantics.Model.Examples.TSets.TSets
open import Semantics.Model.Examples.TSets.Modality.Future
open import Semantics.Model.Examples.TSets.Modality.Past
open import Semantics.Model.Examples.TSets.Monad.Core
open import Semantics.Model.Examples.TSets.Monad.Effects

open import Util.Equality
open import Util.Operations
open import Util.Time

-- The (algebraic) operations of the monad generated by the operations in Op (continued)
----------------------------------------------------------------------------------------

-- Naturality of the delay operation

delayᵀ-nat : ∀ {A B} (τ : Time) {τ'}
           → (f : A →ᵗ B)
           →  delayᵀ τ {τ' = τ'} ∘ᵗ [ τ ]ᶠ (Tᶠ f)
           ≡ᵗ Tᶠ f ∘ᵗ delayᵀ τ
delayᵀ-nat τ f =
  eqᵗ (λ c → refl)

-- Naturality of the (other) algebraic operations

opᵀ-nat : ∀ {A B τ} → (op : Op)
        → (f : A →ᵗ B)
        →  opᵀ {τ = τ} op ∘ᵗ mapˣᵗ idᵗ ([ op-time op ]ᶠ (map⇒ᵗ idᵗ (Tᶠ f)))
        ≡ᵗ Tᶠ f ∘ᵗ opᵀ op
opᵀ-nat {A} {B} {τ} op f =
  eqᵗ (λ {t} c → refl)
