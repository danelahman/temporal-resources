---------------------------------------------------------
-- Free graded monad generated by algebraic operations --
---------------------------------------------------------

open import Function

open import Data.Empty
open import Data.Product
open import Data.Unit hiding (_≤_)

open import Semantics.TSets
open import Semantics.Modality.Future
open import Semantics.Modality.Past
open import Semantics.Monad.Core
open import Semantics.Monad.Strength
open import Semantics.Monad.Effects

open import Util.Equality
open import Util.Operations
open import Util.Time

module Semantics.Monad.Strength.Algebraicity where

-- Algebraicity of the delay operation wrt strength

strᵀ-delayᵀ-algebraicity : ∀ {A B τ τ' τ''}
                         →     strᵀ {A} {B} {τ + τ'} {τ''}
                            ∘ᵗ mapˣᵗ idᵗ (delayᵀ τ {τ'})
                         ≡ᵗ    delayᵀ τ
                            ∘ᵗ [ τ ]ᶠ (strᵀ {A} {B} {τ'} {τ''})
                            ∘ᵗ []-monoidal
                            ∘ᵗ mapˣᵗ (δ {⟨ τ'' ⟩ᵒ A} {τ} {τ'}) idᵗ
strᵀ-delayᵀ-algebraicity {A} {B} {τ} {τ'} {τ''} =
  eqᵗ (λ c →
    trans
      (∘ᵗ-reveal _ _ _)
      (trans
        (trans
          (trans
            (trans
              (cong (map-carrier strᵀ)
                (⟨⟩ᵗ-reveal _ _ _))
              (trans
                (cong₂ (λ x y → map-carrier (strᵀ {A} {B}) (pack-×ᵗ (x , y)))
                  {map-carrier (idᵗ ∘ᵗ fstᵗ) c}
                  {_}
                  {map-carrier (delayᵀ τ ∘ᵗ sndᵗ) c}
                  (trans
                    (∘ᵗ-reveal _ _ _)
                    (trans
                      (idᵗ-reveal _)
                      (fstᵗ-reveal _)))
                  (trans
                    (∘ᵗ-reveal _ _ _)
                    (cong (map-carrier (delayᵀ τ)) (sndᵗ-reveal _))))
                (trans
                  (cong₂ (strˢ {A} {B})
                    (cong proj₁ (pack-unpack-×ᵗ _))
                    (cong proj₂ (pack-unpack-×ᵗ _)) )
                  (cong (delay τ)
                    (trans
                      (cong₂ (strˢ {A} {B})
                        (sym
                          (trans
                            (cong
                              (λ xy → proj₁ (unpack-×ᵗ xy))
                              ([]-monoidal-reveal
                                (map-carrier ⟨ δ {⟨ τ'' ⟩ᵒ A} ∘ᵗ fstᵗ , (idᵗ ∘ᵗ sndᵗ) ⟩ᵗ c)))
                            (trans
                              (cong proj₁ (pack-unpack-×ᵗ _))
                              (trans
                                (cong (λ xy → proj₁ (unpack-×ᵗ xy)) (⟨⟩ᵗ-reveal _ _ _))
                                (trans
                                  (cong proj₁ (pack-unpack-×ᵗ _))
                                  (trans
                                    (∘ᵗ-reveal _ _ _)
                                    (trans
                                      (cong (map-carrier δ) (fstᵗ-reveal _))
                                      (δ-reveal _))))))))
                        (sym
                          (trans
                            (cong
                              (λ xy → proj₂ (unpack-×ᵗ xy))
                              ([]-monoidal-reveal
                                (map-carrier (mapˣᵗ (δ {⟨ τ'' ⟩ᵒ A}) idᵗ) c)))
                            (trans
                              (cong proj₂ (pack-unpack-×ᵗ _))
                              (trans
                                (cong (λ xy → proj₂ (unpack-×ᵗ xy)) (⟨⟩ᵗ-reveal _ _ _))
                                (trans
                                  (cong proj₂ (pack-unpack-×ᵗ _))
                                  (trans
                                    (∘ᵗ-reveal _ _ _)
                                    (trans
                                      (idᵗ-reveal _)
                                      (sndᵗ-reveal _)))))))))
                      (sym ([]-reveal τ _ _)))))))
            (sym
              (cong
                (λ c → (map-carrier (delayᵀ τ) (map-carrier ([ τ ]ᶠ (strᵀ {A} {B})) c)))
                (∘ᵗ-reveal _ _ _))))
          (sym (cong (map-carrier (delayᵀ τ)) (∘ᵗ-reveal _ _ _))))
        (sym (∘ᵗ-reveal _ _ _))))


-- Algebraicity of algebraic operations wrt strength

-- TODO
